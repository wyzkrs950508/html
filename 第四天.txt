（）在js中有执行的意思




作用域：
       变量能够起作用的范围
 在函数的外面不能访问函数内部的变量
 在函数内部可以访问函数内外的变量
   全局作用域：
     供所有js代码执行的环境
   局部作用域：
     当函数执行时会形成一个新的执行函数
     内部代码的新环境
       代码执行之后局部作用域消失 
   全局变量
   局部变量

 作用域嵌套：
    在嵌套的情况下定义的变量不冲突
 作用域链：
   在函数中如果没有变量声明将在上一层查找
   直到全局变量，如果全局变量没有则自动创
   建一个变量。

预解析：
 预解析过程
  - JavaScript解析器会在全局
环境下查找 var、function关键字，变量只声
明不赋值，函数声明加赋值。
  
- 预解析只发生在当前作用域下
- 
执行过程
 - 变量赋值、函数调用、表达式运
算等等。

  


对象
var 对象名={}；声明一个空对象
对象内部是由键（属性）值对组成，多个值之间
用逗号隔开


1.以字面量的方式声明对象（零时创建对象）
var obj={
   name：“张三”，
   age：20，
   sex：“男”
   eat：function（）{
          console.log（）
}
}
console.log（obj）；
console.log（obj.name）；

js对象是无序属性的集合
属性值可以是js中任意数据类型
对象的行为通常用函数数据类型表示（方法）
对象的特征通常用非函数类型表示（属性）

2.程序运行过程中零时创建对象
var person=new Object（）；
person.name=“张三”；
person.age=20；
console.log（person）；


3.批量创建对象
function CreatePerson（name，age）{
   var person=new Object（）；
   person.name=name；
   person.age=age；

  return person；
}
var p1=CreatePerson（name，age）；

console.log（p1）；

4.以构造函数的方式构造对象


function CreatePerson（name，age）{
   
   this.name=name；
   this.age=age；

  
}
var p1= new CreatePerson（name，age）；

console.log（p1）；

new的作用
1.创建空对象
2.将函数内部的this指向空对象
3.执行函数 给对象添加属性
4.将对象返回给函数的调用者

构造函数首字母大写



对象是一个具体的事物  构造函数是用来创建
对象的构造函数代表的是一类事物




console.log(dog instanceof CrestePerson);
检测某一个对象是否属于某一个构造函数（类）



获取属性值
1.console.log（对象名。属性名）
2.console.log（对象名['属性名']）
中括号里可以是变量
console.log（对象名【变量】）

对象名。变量、是查找对象名中的变量属性
如果这样写返回undefined



循环对象
  在循环的过程中将对象的每一个属性所对应的
值取到

语法
for（变量 in 要循环的对象){
}

for（attr in person）{
   console.log（person【attr】）；
   }


删除对象中的属性
delete obj。age；
删除对象obj中的age属性



判断对象中是否具有某个属性

if（！obj。sex）{
     console.log（“没有”）  
}else{
   
    console.log（“有”）
}



if（“sex” in obj）{
    console.log（“没有”）  
}else{
   
    console.log（“有”）
}



































